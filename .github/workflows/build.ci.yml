# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup Bazelisk
        uses: bazelbuild/setup-bazelisk@v1.0.1
        
      - name: Mount bazel cache  # Optional
        uses: actions/cache@v2
        with:
          path: "~/.cache/bazel"
          key: bazel

      - name: clang-format
        uses: DoozyX/clang-format-lint-action@v0.13
        with:
          source: './c++/modern_cpp'
          exclude: './build bazel-*'
          extensions: 'h,hpp,cc,c'
          clangFormatVersion: 12
          inplace: True
      - uses: EndBug/add-and-commit@v4
        with:
          author_name: zhangjun
          author_email: ewalker@live.cn
          message: 'Committing clang-format changes'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: bazel build
        working-directory: c++/modern_cpp
        run: bazel build //...
        
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo build success.
